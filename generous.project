BaconBox:
    type: library-static
  #Local array used as a reference for excluding all platforms.
    platforms: &platforms
      - Android
      - Qt
      - iOS
      - ios
      - IOS
      - SDL
      - MusicIOS
      - OpenAL
      - Windows
      - Flash
      - Lua
      - libc
      - SDLMixer
      - Special
      - StandardRenderer
      - OpenGL
    defaultConfiguration: SDL_Lua_debug
    configurations:
      O3:
        artifacts:
            CFLAGS:
                - "-O3"
            CXXFLAGS:
                - "-O3"
      core: &core
        artifacts:
          CFLAGS:
            - "-Wno-write-strings" 
            - "-Wno-trigraphs"
          CXXFLAGS:
            - "$(CFLAGS)"
          Cpp:
            - ["BaconBox/**/*.cpp", *platforms]
          Header:
            - ["BaconBox/**/*.h",   *platforms]
          IncludesPath:
            - "."
          Define:
            - ["SIGLY_DEFAULT_MT_POLICY", "sigly::SingleThreaded"]
            # - SIGLY_USE_POSIX_THREADS
            - ["VMATH_NAMESPACE", "vmath"]
      OpenGL: &OpenGL
         artifacts:
          Cpp:
            - "BaconBox/**/OpenGL/*.cpp"
            - "BaconBox/**/StandardRenderer/*.cpp"
          Header:
            - "BaconBox/**/OpenGL/*.h"   
            - "BaconBox/**/StandardRenderer/*.h"   
      OSX: &OSX
         artifacts:
          Cpp:
            - "BaconBox/**/libc/*.cpp"
          Header:
            - "BaconBox/**/libc/*.h"
          CXXFLAGS:
            - "-stdlib=libstdc++"
          IncludesPath:
            - "libraries/Darwin/x86_64/include"

      Linux: &Linux # TODO 32/64 bits detection
         artifacts:
          Cpp:
            - "BaconBox/**/libc/*.cpp"
          Header:
            - "BaconBox/**/libc/*.h"
          CXXFLAGS:
            - "-stdlib=libstdc++"
          IncludesPath:
            - "libraries/Linux/x86_64/include"

      WINDOWS: &WINDOWS
         artifacts:
          Cpp:
            - "BaconBox/**/Windows/*.cpp"
          Header:
            - "BaconBox/**/Windows/*.h"
          IncludesPath:
            - "libraries/MINGW32_NT-6.1/i686/include"

      native: &native
        include: [core,  OpenGL, [OSX, "OS.osx?"], [WINDOWS, "OS.windows?"], [Linux, "OS.linux?"]]

      Lua: &Lua
        postScriptArtifacts:
          Cpp:
            - "<%= project.buildDir %>/swig/BaconBoxLua.cpp"
          Header:
            - "<%= project.buildDir %>/swig/swigluarun.h"
          IncludesPath:
            - "<%= project.buildDir %>/swig"
        artifacts:
          Cpp:
            - "BaconBox/**/Lua/*.cpp"
          Header:
            - "BaconBox/**/Lua/*.h"
          Define:
            - BB_LUA
          PreGenerousScript:
            - |
              puts_banner 'Generating Lua swig bindings'
              FileUtils.mkpath "#{project.buildDir}/swig"
              puts %x{ #{project.options['swig']} -lua -c++ -module BaconBox -outdir #{project.buildDir}/swig #{project.definesString} #{project.includesString} -o #{project.buildDir}/swig/BaconBoxLua.cpp BaconBox/Special/Swig/BaconBox.i};
              puts %x{ #{project.options['swig']} -lua -external-runtime #{project.buildDir}/swig/swigluarun.h}
          Option:
            - ['swig', "Path to your swig executable", 'swig']
      debug: &debug
        artifacts:
          CXXFLAGS:
            - "-O0"
          Define:
            - BB_DEBUG
      debuger: &debuger
        include: [debug]
        artifacts:
          CXXFLAGS:
            - "-g"
      SDL: &SDL
        include: [native]
        artifacts:
          Cpp:
            - "BaconBox/**/SDL/*.cpp"
            - "BaconBox/**/SDLMixer/*.cpp"
          Header:
            - "BaconBox/**/SDL/*.h"
            - "BaconBox/**/SDLMixer/*.h"
          Define:
            - SDL
      SDL_Lua: &SDL_Lua
        include: [Lua, SDL]
      SDL_Lua_debug:
                include: [SDL_Lua, debug]
      Android: &Android
                include: [core, OpenGL, O3]
                artifacts:
                  CFLAGS:
                    - "-stdlib=libstdc++"
                  C:
                    - "BaconBox/**/Android/*.c"
                  Cpp:
                    - "BaconBox/**/libc/*.cpp"
                    - "BaconBox/**/Android/*.cpp"
                  Header:
                    - "BaconBox/**/libc/*.h"
                    - "BaconBox/**/Android/*.h"
                  IncludesPath:
                    - "libraries/Android/**/include"
                  Define:
                    - BB_ANDROID
      Android_Lua: &Android_Lua
                include: [Lua, Android]
      Android_Lua_debug_arm:
                include: [Android_Lua]
      Android_Lua_debug_x86:
                include: [Android_Lua]
      Flash:
        include: [core, Lua]
        outputExtension: swc
        outputPrefix: ''
        type: application
        artifacts:
          Define:
            - BB_FLASH_PLATFORM
          LDFLAGS:
            - <%= "#{project.buildDir}/as3/VFS.abc" %>
            - <%= "#{project.buildDir}/as3/BaconBoxAS3.abc" %>
            - "-emit-swc=BaconBox"
          CFLAGS:
            - "-emit-swc=BaconBox"
          Cpp:
            - "BaconBox/**/Flash/*.cpp"
            - "<%= project.buildDir %>/as3/*.cpp"
            - "BaconBox/**/libc/*.cpp"
          Header:
            - "BaconBox/**/Flash/*.h"
            - "BaconBox/**/libc/*.h"
          IncludesPath:
            - "libraries/Flash/include"
          Library:
            - JsonBox
            - lua
            - z
            - AS3++
          LibrariesPath:
            - "libraries/Flash/lib"
          PreGenerousScript:
            - |
              AS3COMPILERARGS = "java -jar #{project.options['crossbridge']}/usr/lib/asc2.jar -merge -md "
              COMPC = "#{project.options['flex']}/bin/compc"
              FileUtils.mkpath "#{project.buildDir}/as3"
              %x{ chmod 766 "#{project.options['crossbridge']}/usr/share/LSOBackingStore.as"}
              %x{ cp "#{project.options['crossbridge']}/usr/share/LSOBackingStore.as" "#{project.buildDir}/as3"}
              %x{ cp "BaconBox/Special/Flash/URLLoaderVFS.as" "#{project.buildDir}/as3"}

              puts_banner 'Compiling VFS.abc'

              puts %x{#{AS3COMPILERARGS} -import #{project.options['crossbridge']}/usr/lib/builtin.abc \
              -import #{project.options['crossbridge']}/usr/lib/playerglobal.abc \
              -import #{project.options['crossbridge']}/usr/lib/BinaryData.abc \
              -import #{project.options['crossbridge']}/usr/lib/ISpecialFile.abc \
              -import #{project.options['crossbridge']}/usr/lib/IBackingStore.abc \
              -import #{project.options['crossbridge']}/usr/lib/IVFS.abc \
              -import #{project.options['crossbridge']}/usr/lib/InMemoryBackingStore.abc \
              -import #{project.options['crossbridge']}/usr/lib/PlayerKernel.abc \
              #{project.buildDir}/as3/URLLoaderVFS.as #{project.buildDir}/as3/LSOBackingStore.as -outdir #{project.buildDir}/as3 -out VFS}

              puts_banner 'Compiling BaconBoxAS3.abc'
              puts %x{#{project.options['crossbridge']}/usr/bin/swig -as3 -c++ -module BaconBoxAS3 -outdir #{project.buildDir}/as3 -ignoremissing #{project.definesString} #{project.includesString} -package BaconBox -o #{project.buildDir}/as3/BaconBoxAS3.cpp BaconBox/Special/Flash/BaconBoxAS3.i}
              puts %x{#{AS3COMPILERARGS} -abcfuture -AS3 -import #{project.options['crossbridge']}/usr/lib/builtin.abc -import #{project.options['crossbridge']}/usr/lib/playerglobal.abc #{project.buildDir}/as3/BaconBoxAS3.as}
              puts %x{mv #{project.buildDir}/as3/BaconBoxAS3.as #{project.buildDir}/as3/BaconBoxAS3.as3}

              puts_banner 'Compiling EntityWrapper.swc'
              %x{ cp -r "BaconBox/Special/Flash/BaconBox" "#{project.buildDir}/as3/BaconBox"}
              puts %x{ #{AS3COMPILERARGS} -abcfuture -AS3 -import #{project.options['crossbridge']}/usr/lib/builtin.abc -import #{project.options['crossbridge']}/usr/lib/playerglobal.abc -outdir #{project.buildDir}/as3 #{project.buildDir}/as3/BaconBox/EntityWrapper/EntityHolderTextField.as #{project.buildDir}/as3/BaconBox/EntityWrapper/EntityHolderMovieClip.as }
              puts %x{#{COMPC} -compiler.source-path #{project.buildDir}/as3 -include-classes BaconBox.EntityWrapper.EntityHolderTextField BaconBox.EntityWrapper.EntityHolderMovieClip -output #{project.buildDir}/EntityWrapper.swc}
          Option:
            - - crossbridge
              - "Path to your crossbridge sdk folder"
              - <%= path = %x{which gcc}; path = path.slice(0..(path.index("/usr/bin/gcc"))) if path.include? '/usr/bin/gcc'; path = path.slice(0..(path.index("/usr/bin//gcc"))) if path.include? '/usr/bin//gcc'; path %>
            - ["flex", "Path to your <%= sdk folder", ""]

      Flash_debug:
        include: [Flash, debug]


